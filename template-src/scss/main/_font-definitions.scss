// This program is part of the OpenCms Mercury Template.
//
// Copyright (c) Alkacon Software GmbH & Co. KG (http://www.alkacon.com)
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
// Download of Google web fonts:
// https://google-webfonts-helper.herokuapp.com/fonts or
// https://gwfh.mranftl.com/fonts
//
// If available, download fonts in the following weights:
// 300 400 [normal] 500 600 700 [bold]
//
// Options:
// Charset latin + latin-ext
// Font styles regular + italic
// Copy CSS: "Modern Browsers"
// Customize folder prefix: ../fonts/

$font-family-sans-serif:        -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" !default;
$font-family-serif:             Athelas, Georgia, Cambria, "Times New Roman", Times, serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" !default;
$font-family-monospace:         SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace !default;

$fonts-preloaded-custom:        () !default;

$fonts-preloaded-default: (
    "DM Sans":                  (join("DM Sans",                 $font-family-sans-serif),  (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "Exo 2":                    (join("Exo 2",                   $font-family-sans-serif),  (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "Fira Sans":                (join("Fira Sans",               $font-family-sans-serif),  (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "Fira Sans Condensed":      (join("Fira Sans Condensed",     $font-family-sans-serif),  (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "IBM Plex Sans":            (join("IBM Plex Sans",           $font-family-sans-serif),  (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "IBM Plex Sans Condensed":  (join("IBM Plex Sans Condensed", $font-family-sans-serif),  (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "IBM Plex Serif":           (join("IBM Plex Serif",          $font-family-serif),       (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "Lato":                     (join("Lato",                    $font-family-sans-serif),  (300: (normal, italic), 400: (normal, italic), 700: (normal, italic))),
    "Literata":                 (join("Literata",                $font-family-serif),       (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "Merriweather":             (join("Merriweather",            $font-family-serif),       (300: (normal, italic), 400: (normal, italic), 700: (normal, italic))),
    "Merriweather Sans":        (join("Merriweather Sans",       $font-family-sans-serif),  (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "Montserrat":               (join("Montserrat",              $font-family-sans-serif),  (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "Noto Sans":                (join("Noto Sans",               $font-family-sans-serif),  (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "Noto Serif":               (join("Noto Serif",              $font-family-serif),       (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "Open Sans":                (join("Open Sans",               $font-family-sans-serif),  (300: (normal, italic), 400: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "Open Sans Condensed":      (join("Open Sans Condensed",     $font-family-sans-serif),  (300: (normal, italic), 700: (normal))),
    "Oswald":                   (join("Oswald",                  $font-family-sans-serif),  (300: (normal),         400: (normal),         500: (normal),         600: (normal),         700: (normal))),
    "Poppins":                  (join("Poppins",                 $font-family-sans-serif),  (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "Prompt":                   (join("Prompt",                  $font-family-sans-serif),  (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "PT Sans":                  (join("PT Sans",                 $font-family-sans-serif),  (400: (normal, italic), 700: (normal, italic))),
    "PT Sans Caption":          (join("PT Sans Caption",         $font-family-sans-serif),  (400: (normal),         700: (normal))),
    "PT Sans Narrow":           (join("PT Sans Narrow",          $font-family-sans-serif),  (400: (normal),         700: (normal))),
    "PT Serif":                 (join("PT Serif",                $font-family-serif),       (400: (normal, italic), 700: (normal, italic))),
    "PT Serif Caption":         (join("PT Serif Caption",        $font-family-serif),       (400: (normal, italic))),
    "Raleway":                  (join("Raleway",                 $font-family-sans-serif),  (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "Roboto":                   (join("Roboto",                  $font-family-sans-serif),  (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 700: (normal, italic))),
    "Roboto_Condensed":         (join("Roboto Condensed",        $font-family-sans-serif),  (300: (normal, italic), 400: (normal, italic), 700: (normal, italic))),
    "Roboto Slab":              (join("Roboto Slab",             $font-family-serif),       (300: (normal),         400: (normal),         700: (normal))),
    "Source Sans Pro":          (join("Source Sans Pro",         $font-family-sans-serif),  (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "Titillium Web":            (join("Titillium Web",           $font-family-sans-serif),  (300: (normal, italic), 400: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "Ubuntu":                   (join("Ubuntu",                  $font-family-sans-serif),  (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 700: (normal, italic))),
    "Ubuntu Condensed":         (join("Ubuntu Condensed",        $font-family-sans-serif),  (400: (normal))),
    "Work Sans":                (join("Work Sans",               $font-family-sans-serif),  (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "Yanone Kaffeesatz":        (join("Yanone Kaffeesatz",       $font-family-sans-serif),  (300: (normal),         400: (normal),         700: (normal))),
    "SFMono-Regular":           ((                               $font-family-monospace),   (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "-apple-system":            ((                               $font-family-sans-serif),  (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "default-sans-serif":       ((                               $font-family-sans-serif),  (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "default-serif":            ((                               $font-family-serif),       (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 600: (normal, italic), 700: (normal, italic))),
    "default-monospace":        ((                               $font-family-monospace),   (300: (normal, italic), 400: (normal, italic), 500: (normal, italic), 600: (normal, italic), 700: (normal, italic)))
);


$fonts-preloaded: map-merge($fonts-preloaded-default, $fonts-preloaded-custom);

@function has-preloaded-font($name) {
    $font-name: quote(nth($name, 1));
    @return map-has-key-safe($fonts-preloaded, $font-name);
}


@function get-font-family($name) {
    $font-name: quote(nth($name, 1));
    @if (map-has-key-safe($fonts-preloaded, $font-name)) {
        $font-def: map-get($fonts-preloaded, $font-name);
        $font-list: nth($font-def, 1);
        @return $font-list;
    }
    @debug "Font '#{$name}' not found in predefined list, using literal value for font-family";
    @return $name;
}


@function get-closest-smaller($list, $value) {
    $result: 0;
    @for $i from 1 through length($list) {
        $val: nth($list, $i);
        @if (($val < $value) and ($val > $result)) {
            $result: $val;
        }
    }
    @return $result;
}


@function get-closest-larger($list, $value) {
    $result: 2000;
    @for $i from 1 through length($list) {
        $val: nth($list, $i);
        @if (($val > $value) and ($val < $result)) {
            $result: $val;
        }
    }
    @return $result;
}


@function closest-number($value, $smaller, $larger) {
    $dist-small: abs($smaller - $value);
    $dist-large: abs($larger - $value);
    // @debug "Comparing #{value}: smaller:#{$smaller} distance=#{$dist-small}, larger:#{$larger} distance=#{$dist-large}";
    @if ((($smaller > 0) and ($dist-small < $dist-large)) or ($larger == 0)) {
        @return $smaller;
    }
    @if ($larger > 0) {
        @return $larger;
    }
    @return $value;
}


@function get-font-weight($name, $weight) {
    // assuming $name has already been checked with get-font-family()
    @if (default == $weight) {
        // special case, if weight is set to 'default' then do NOT set the individual font-weight later
        @return default;
    }
    $font-name: quote(nth($name, 1));
    @if (map-has-key-safe($fonts-preloaded, $font-name)) {
        $font-def: map-get($fonts-preloaded, $font-name);
        $font-weights: nth($font-def, 2);
        @if (map-has-key-safe($font-weights, $weight)) {
            @return $weight;
        }
        $font-weights: map-keys($font-weights);
        $smaller-weight: get-closest-smaller($font-weights, $weight);
        $larger-weight: get-closest-larger($font-weights, $weight);
        $result: closest-number($weight, $smaller-weight, $larger-weight);
        @warn "Font '#{$font-name}' has no matching weight #{$weight}, smaller is: #{$smaller-weight}, larger is: #{$larger-weight}, using: #{$result}";
        @return $result;
    }
    @debug "Font '#{$font-name}' not found in predefined list, using #{$weight} for font-weight";
    @return $weight;
}


@function get-font-style($name, $weight, $style) {
    // assuming $name and $weight have already been checked with get-font-family() and get-font-weight()
    $font-name: quote(nth($name, 1));
    @if (map-has-key-safe($fonts-preloaded, $font-name)) {
        $font-def: map-get($fonts-preloaded, $font-name);
        $font-weights: nth($font-def, 2);
        // assuming here that get-font-weight() was used on the $weight variable before
        $font-styles: map-get($font-weights, $weight);
        // styles can be only "normal" or "italic" or both, if we don't find what we want just use the value that is there
        $result: $style;
        @if (index($font-styles, unquote($style)) == null) {
            $result: nth($font-styles, 1);
            @debug "Font '#{$font-name}' weight #{$weight} has no matching style '#{$style}', using: '#{$result}'";
        }
        @return $result;
    }
    @debug "Font '#{$font-name}' not found in predefined list, using '#{$style}' for font-style";
    @return $style;
}


@function font-matches($variable, $name) {
    $font-name: quote(nth($name, 1));
    $variable-name: quote(nth($variable, 1));
    @return $font-name == $variable-name;
}


@function require-font($name) {
    @return (
        font-matches($font-family-headings, $name) or
        font-matches($font-family-base, $name) or
        font-matches($font-family-gui, $name) or

        font-matches($btn-font-family, $name) or
        font-matches($form-font-family, $name) or
        font-matches($pagination-font-family, $name) or
        font-matches($font-family-fancy, $name) or

        font-matches($nav-font-family, $name) or
        font-matches($nav-header-font-family, $name) or
        font-matches($nav-menu-font-family, $name) or
        font-matches($nav-mobile-font-family, $name) or
        font-matches($nav-meta-font-family, $name) or
        font-matches($nav-breadcrumb-font-family, $name)
    );
}
