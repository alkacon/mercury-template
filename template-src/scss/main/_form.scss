// This program is part of the OpenCms Mercury Template.
//
// Copyright (c) Alkacon Software GmbH & Co. KG (http://www.alkacon.com)
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

/**********
 * Source file: _form.scss
 */

.styled-form {

    --#{$prefix}form-text-color: #{$form-text-color};
    --#{$prefix}form-background-color: #{$form-background};
    --#{$prefix}form-input-color: #{$form-input-color};
    --#{$prefix}form-input-background-color: #{$form-input-background};
    --#{$prefix}form-placeholder-color: #{$form-placeholder-color};
    --#{$prefix}form-border-color: #{$form-border-color};
    --#{$prefix}form-icon-color: #{$form-icon-color};
    --#{$prefix}form-label-color: #{$form-label-color};
    --#{$prefix}form-captcha-background-color: #{$form-captcha-background};

    --#{$prefix}form-radio-checked-color: #{$form-radio-checked-color};
    --#{$prefix}form-radio-checked-border-color: #{$form-radio-checked-border-color};
    --#{$prefix}form-radio-unchecked-color: #{$form-radio-unchecked-color};
    --#{$prefix}form-radio-unchecked-border-color: #{$form-radio-unchecked-border-color};

    --#{$prefix}form-error-background-color: #{$form-error-background};
    --#{$prefix}form-error-text-color: #{$form-error-text-color};

    --#{$prefix}form-border-radius: #{$form-border-radius};
    @if ($form-input-border-radius != $btn-border-radius) {
        --#{$prefix}form-input-border-radius: #{$form-input-border-radius};
    } @else {
        --#{$prefix}form-input-border-radius: var(--#{$prefix}btn-border-radius);
    }
    @if ($form-font-family != $font-family-base) {
        --#{$prefix}form-font-family: #{inspect($form-font-family)};
    } @else {
        --#{$prefix}form-font-family: var(--#{$prefix}body-font-family);
    }

    --#{$prefix}form-spacing: #{$form-spacing};
    --#{$prefix}form-padding-y: #{$form-padding-y};
    --#{$prefix}form-padding-x: #{$form-padding-x};
    --#{$prefix}form-section-margin-bottom: #{$form-section-margin-bottom};

    margin: 0;
    outline: none;
    font-size: $form-font-size;
    font-weight: $form-font-weight;
    line-height: $form-line-height;
    font-family: var(--#{$prefix}form-font-family);
    border: $form-border;
    border-radius: var(--#{$prefix}form-border-radius);
    color: var(--#{$prefix}form-text-color);
    background: var(--#{$prefix}form-background-color);
    @include use-hyphens-text;

    &.element,
    &.subelement {
        margin-bottom: var(--#{$prefix}element-margin);
    }

    header {
        border-bottom: $form-border;
        padding: var(--#{$prefix}form-padding-y) var(--#{$prefix}form-padding-x);
        @extend .h4;
    }

    fieldset {
        display: block;
        padding: var(--#{$prefix}form-padding-y) var(--#{$prefix}form-padding-x);
        border: none;

        p:last-child {
            margin-bottom: 0;
        }
    }

    .webform_subfields {
        fieldset {
            padding: 0;
        }
    }

    fieldset + fieldset {
        border-top: $form-border;
    }

    .webform_subfields,
    .section,
    section {
        margin-bottom: var(--#{$prefix}form-section-margin-bottom);
        &:last-child {
            margin-bottom: 0 !important;
        }
    }
    footer {
        display: block;
        padding: var(--#{$prefix}form-padding-y) var(--#{$prefix}form-padding-x);
        border-top: $form-border;
    }
    footer:after {
        content: "";
        display: table;
        clear: both;
    }

    label,
    .label {
        display: block;
        font-weight: $form-font-weight-label;
        margin-bottom: calc(0.25 * var(--#{$prefix}form-spacing));
    }

    .note {
        margin-top: calc(0.25 * var(--#{$prefix}form-spacing));
        padding: 0;
        font-size: 100%;
        line-height: 1.5;
    }

    .input,
    .select,
    .textarea,
    .radio,
    .checkbox,
    .toggle,
    .button {
        position: relative;
        display: block;
    }

    input.datepicker.flatpickr-mobile,
    input.datepicker.input {
        position: static;
    }

    input.datepicker:not([value*="."]):not([value*="/"]):not([value*="-"]) + input.datepicker.flatpickr-mobile {
        &::before {
            color: var(--#{$prefix}form-placeholder-color);
            content:attr(placeholder);
        }
    }

    .input input,
    .select select,
    .textarea textarea {

        font-weight: $form-font-weight-input;
        font-size: $form-font-size-input;
        color: var(--#{$prefix}form-label-color);
        display: block;
        box-sizing: border-box;
        width: 100%;
        padding: 7px 10px;
        outline: none;
        border-width: 1px;
        border-style: solid;
        border-radius: var(--#{$prefix}form-input-border-radius);
        color: var(--#{$prefix}form-input-color);
        background-color: var(--#{$prefix}form-input-background-color);
        appearance: none;

        &::placeholder {
            font-weight: $form-font-weight-input;
            font-size: $form-font-size-input;
            color: var(--#{$prefix}form-placeholder-color);
        }
    }

    .input.button {
        display: flex;
        flex: 1 1 auto;

        input {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }
        button {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }
        input {
            border-right-style: none;
        }
        button.btn {
            padding-top: 0;
            padding-bottom: 0;
            line-height: 1;
            border: 1px solid var(--#{$prefix}form-border-color);
            border-left-style: none;
            white-space: nowrap;
        }
    }

    .input-file .button {
        @include button-base;
        & {
            position: absolute;
            top: 4px;
            right: 4px;
            float: none;
            height: calc(100% - 8px);
            padding: 0 var(--#{$prefix}form-spacing);
            font-size: 80%;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        input {
            position: absolute;
            top: 0;
            right: 0;
            padding: 0;
            cursor: pointer;
            opacity: 0;
            width: 100%;
            height: 100%;
        }
    }

    // selects
    .select {
        i {
            position: absolute;
            top: 0;
            right: 2px;
            width: 28px;
            height: 100%;
            pointer-events: none;
            color: var(--#{$prefix}form-input-color);

            &::before,
            &::after {
                content: "";
                position: absolute;
                right: 10px;
                border-right: 5px solid transparent;
                border-left: 5px solid transparent;
            }
            // generates the select arrows after the select text
            &::before {
                top: calc(50% - 5px - 3px);
                border-bottom: 5px solid var(--#{$prefix}form-icon-color);
            }
            &::after {
                bottom: calc(50% - 5px - 3px);
                border-top: 5px solid var(--#{$prefix}form-icon-color);
            }
        }
        select {
            cursor: pointer;
            padding-right: 28px;

            &[disabled] {
                color: var(--#{$prefix}form-placeholder-color);
            }
        }
    }
    .select-multiple {
        select {
            height: auto;
        }
    }

    // text areas
    .textarea textarea {
        height: auto;
        resize: none;
    }

    .textarea-resizable textarea {
        resize: vertical;
    }

    .textarea-expandable textarea {

        &:focus {
            height: auto;
        }
    }


    // radios and checkboxes
    .radio,
    .checkbox {
        font-weight: $form-font-weight-option;
        padding-left: 35px;
        color: var(--#{$prefix}form-label-color);
        cursor: pointer;

        &:last-child {
            margin-bottom: 0;
        }

         input {
            position: absolute;
            left: -9999px;
        }

        i {
            position: absolute;
            top: 3px;
            left: 0;
            display: block;
            width: 20px;
            height: 20px;
            outline: none;
            border-width: 1px;
            border-style: solid;
            background-color: var(--#{$prefix}form-input-background-color);
        }

        input + i::after {
            position: absolute;
            opacity: 0;
            transition: opacity 0.1s;
        }

        input:checked + i::after {
            opacity: 1;
            color: var(--#{$prefix}form-radio-checked-color);
        }
    }

    .radio {
        i {
            border-radius: 50%;
        }
        input + i::after {
            content: "";
            top: 4px;
            left: 4px;
            width: 10px;
            height: 10px;
            border-radius: 50%;
        }
    }

    .checkbox {
        input + i::after {
            @include icon-font();
            content: "\f00c"; // mercury:icon - fa-check
            top: -5px;
            left: -1px;
            font-size: 23px;
            line-height: 23px;
            font-weight: normal;
            text-align: center;
        }
    }

    // toggles
    .toggle {
        font-weight: $form-font-weight-option;
        padding-right: 70px;
        color: var(--#{$prefix}form-label-color);

        cursor: pointer;

        &:last-child {
            margin-bottom: 0;
        }

        input {
            position: absolute;
            left: -9999px;

            &:checked + i::before {
                right: 36px;
                background-color: var(--#{$prefix}form-radio-checked-color);
            }
            &:checked + i::after {
                content: "ON";
                text-align: right;
                color: var(--#{$prefix}form-radio-checked-color);
            }
        }

        i {
            content: "";
            position: absolute;
            top: 4px;
            right: 0;
            display: block;
            width: 55px;
            height: 20px;
            border-width: 1px;
            border-style: solid;
            border-radius: 12px;
            background-color: var(--#{$prefix}form-input-background-color);

            &::before {
                content: "";
                position: absolute;
                z-index: 1;
                top: 4px;
                right: 4px;
                display: block;
                width: 10px;
                height: 10px;
                border-radius: 50%;
                opacity: 1;
                transition: right 0.2s;
                background-color: var(--#{$prefix}form-radio-unchecked-color);
            }

            &::after {
                content: "OFF";
                position: absolute;
                top: 3px;
                right: 8px;
                left: 8px;
                font-style: normal;
                font-size: 12px;
                line-height: 12px;
                font-weight: $form-font-weight;
                text-align: left;
                color: var(--#{$prefix}form-radio-unchecked-color);
            }
        }
    }

    // icons
    .icon-append,
    .icon-prepend {
        display: flex;
        align-items: center;
        justify-content: center;
        position: absolute;
        width: 34px;
        height: calc(100% - 6px);
        top: 3px;

        &.ico-svg > svg {
            vertical-align: middle;
        }
    }

    .icon-append {
        right: 0;
        border-left-width: 1px;
        border-left-style: solid;
    }

    .icon-prepend {
        left: 0;
        border-right-width: 1px;
        border-right-style: solid;
    }

    .input,
    .textarea {
        .icon-append ~ input, // "~" instead of "+" required by datepicker
        .icon-append + textarea {
            padding-right: 34px;
        }

        .icon-prepend ~ input,
        .icon-prepend + textarea {
            padding-left: 42px;
        }
    }

    .textarea {
        .icon-append,
        .icon-prepend {
            border-bottom-width: 1px;
            border-bottom-style: solid;
            align-self: unset;
            top: 3px;
            width: 31px;
            height: 31px;
        }
        .icon-append {
            padding-right: 0;
            right: 3px;
            border-bottom-left-radius: var(--#{$prefix}form-input-border-radius);
        }
        .icon-prepend {
            padding-left: 0;
            left: 3px;
            border-bottom-right-radius: var(--#{$prefix}form-input-border-radius);
        }
    }

    // normal state
    .input input,
    .select select,
    .textarea textarea,
    .radio i,
    .checkbox i,
    .icon-append,
    .icon-prepend {
        border-color: var(--#{$prefix}form-border-color);
        // transition: border-color $transition-timing $transition-function;
    }
    .icon-append,
    .icon-prepend {
        color: var(--#{$prefix}form-icon-color);
    }

    // checked state
    .radio input + i::after {
        background-color: var(--#{$prefix}form-radio-checked-color);
    }
    .checkbox input + i::after {
        color: var(--#{$prefix}form-radio-checked-color);
    }
    .radio,
    .checkbox,
    .toggle {
        i {
            border-color: var(--#{$prefix}form-radio-unchecked-border-color);
            // transition: border-color $transition-timing $transition-function;
        }

        input:checked + i {
            border-color: var(--#{$prefix}form-radio-checked-border-color);
        }
    }

    .checkbox i {
        border-radius: var(--#{$prefix}form-input-border-radius);
    }

    // error state
    &.state-error {
        .state-error input,
        .state-error select,
        .state-error textarea,
        .radio.state-error i,
        .checkbox.state-error i,
        .toggle.state-error i,
        .toggle.state-error input:checked + i {
            background-color: var(--#{$prefix}form-error-background-color);
        }
        .note-error {
            color: var(--#{$prefix}form-error-text-color);
            &::before {
                @include icon-font();
                content: "\f071"; // mercury:icon - fa-exclamation-triangle
                margin-right: 10px;
            }
        }
    }

    // disabled state
    .state-disabled {
        &.input input,
        &.select,
        &.textarea,
        &.radio,
        &.checkbox,
        &.toggle,
        &.button{
            cursor: default;
            opacity: 0.5;
        }
    }

    // disabled state (only cursor)
    .state-disabled-alt {
        &.input input,
        &.select,
        &.textarea,
        &.radio,
        &.checkbox,
        &.toggle,
        &.button {
            cursor: default;
        }
        &.radio {
            input:checked + i::after {
                background-color: var(--#{$prefix}form-radio-unchecked-color);
            }
        }
        &.checkbox {
            input:checked + i::after {
                color: var(--#{$prefix}form-radio-unchecked-color);
            }
        }
    }
    // captcha
    .input {
        .captcha {
            background-color: var(--#{$prefix}form-captcha-background-color);
            margin-bottom: calc(0.5 * var(--#{$prefix}form-spacing));
            border: $form-captcha-border;
            border-radius: var(--#{$prefix}form-input-border-radius);
            overflow: hidden;

            img {
                max-width: 100% !important;
            }
        }
    }

    @include media-breakpoint-down(sm) {
        header,
        footer,
        fieldset {
            padding: calc(0.5 * var(--#{$prefix}form-padding-y)) calc(0.5 * var(--#{$prefix}form-padding-x));
        }

        .section,
        section {
            margin-bottom: calc(0.5 * var(--#{$prefix}form-section-margin-bottom));
        }

        .input input,
        .select select,
        .textarea textarea {

            &::placeholder {
                font-size: $form-font-size-input-xs-ph;
            }
        }
    }

    @include media-breakpoint-up(lg) {

        .toggle,
        .radio {
            i {
                top: 0;
            }
        }

        .checkbox {
            i {
                top: 1px;
            }
        }

        .inline-group {
            margin-right: -30px;
            margin-bottom: calc(-1 * calc(0.25 * var(--#{$prefix}form-spacing)));

            &::after {
                content: "";
                display: table;
                clear: both;
            }


            .checkbox {
                float: left;
                margin-right: 30px;
                margin-bottom: calc(0.25 * var(--#{$prefix}form-spacing));
            }
        }

        .webform_subfields fieldset {
            padding-left: var(--#{$prefix}form-padding-x);
            padding-right: var(--#{$prefix}form-padding-x);
        }
    }

    // compact spacing form layout
    &.compact {

        --#{$prefix}form-spacing: #{$form-compact-spacing};
        --#{$prefix}form-padding-y: #{$form-compact-padding-y};
        --#{$prefix}form-padding-x: #{$form-compact-padding-x};
        --#{$prefix}form-section-margin-bottom: #{$form-compact-section-margin-bottom};

        .input input,
        .select select,
        .textarea textarea {
            padding: 4px 10px;
        }

        .input,
        .textarea {
            .icon-append ~ input, // "~" instead of "+" required by datepicker
            .icon-append + textarea {
                padding-right: 34px;
            }

            .icon-prepend ~ input,
            .icon-prepend + textarea {
                padding-left: 42px;
            }
        }

        .select {
            i {
                &::before {
                    top: 9px;
                }
                &::after {
                    bottom: 9px;
                }
            }
            select {
                padding-right: 28px;
            }
        }

        .icon-append,
        .icon-prepend {
            padding-top: 2px;
            padding-bottom: 2px;
        }
    }

    // no borders around form
    &.no-border {
        border: none;
        form,
        header,
        footer,
        fieldset {
            border: none;
            padding: 0;
            margin-bottom: calc(0.5 * var(--#{$prefix}form-spacing));
        }
    }

    // no background color set
    &.no-bg {
        background-color: inherit;
    }
}


// keyboard navigation outline

html.keyboard-nav {
    .styled-form {
        .radio,
        .checkbox {
            input:focus + i {
                @include focus-outline;
            }
        }
    }
}


// stuff around the form itself

.type-webform  {
    --#{$prefix}form-spacing: #{$form-spacing};

    .form-header {
        margin-bottom: var(--#{$prefix}form-spacing);
    }

    .form-footer {
        margin-top: var(--#{$prefix}form-spacing);

        > p:last-of-type {
            margin-bottom: 0;
        }
    }

    @include media-breakpoint-down(sm) {
        .table.table-responsive {
            font-size: 12px; // table might ge too big otherwise
        }
    }

    .btn.resetbutton {
        @include button-color-setvars($grey-light, $btn-hover-bg);
    }

    .formbtn-row {
        display: block;

        .formbtn {
            margin-bottom: var(--#{$prefix}form-spacing);
            &:last-of-type {
                margin-bottom: 0;
            }

            &.btn,
            .btn {
                width: 100%;
                display: block;
            }
        }
    }

    table.webform-input {
        background-color: var(--#{$prefix}body-bg);

        td.label {
            white-space: nowrap;
        }

        td.value {
            width: 100%;
        }
    }

    @include media-breakpoint-up(md) {
        .formbtn-row {
            display: flex;
            justify-content: center;

            .formbtn {
                margin-bottom: 0;
                margin-left: calc(0.5 * var(--#{$prefix}form-spacing));
                margin-right: calc(0.5 * var(--#{$prefix}form-spacing));
                width: auto;

                &.btn,
                .btn {
                    width: auto;
                    min-width: 200px;
                }
            }
        }
    }

    .checkpage {
        // checkpage (optional confirmation page from webform) requires some special formatting
        .correctaction {
            margin-bottom: var(--#{$prefix}form-spacing);
        }

        @include media-breakpoint-up(md) {
            .correctaction {
                margin-bottom: 0;
            }
        }
    }
}
