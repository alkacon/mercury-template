// This program is part of the OpenCms Mercury Template.
//
// Copyright (c) Alkacon Software GmbH & Co. KG (http://www.alkacon.com)
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

/**********
 * Source file: _linksequence.scss.
 */

%ls-icon-base {
    padding-left: calc(var(--#{$prefix}ls-li-padding));
    &::before {
        float: left;
        margin-left: calc(-1 * var(--#{$prefix}ls-li-padding));
        display: inline-block;
        line-height: $line-height-base;
    }
}

%ls-icon-custom {
    @extend %ls-icon-base;
    &::before {
        @include icon-font();
        font-size: inherit;
        line-height: inherit;
    }
}

%ls-icon-default {
    @extend %ls-icon-base;
    &::before {
        font-family: sans-serif;
        font-size: inherit;
        content: "\2022";
    }
}

%ls-icon-line {
    @extend %ls-icon-base;
    &::before {
        font-family: sans-serif;
        content: "|";
    }
}

.type-linksequence {
    --#{$prefix}ls-li-padding: #{$ls-li-padding};

    @if $nav-hyphens {
        hyphens: auto;
        overflow-wrap: anywhere;
        word-break: break-word;
    }

    li.ls-li {
        a:hover {
            text-decoration: none;
            .ls-item {
                span:not(.ls-icon) {
                    text-decoration: $link-hover-decoration;
                }
            }
        }

        .ls-item.icon-last {
            display: inline-flex;
            align-items: baseline;
            flex-direction: row;
            .ls-icon {
                order: 10;
                + span {
                    margin-left: 0;
                    margin-right: var(--#{$prefix}ws-margin);
                }
            }
        }
    }
}

.ls-bullets,
.ls-row {
    ul {
        list-style-type: none;
        margin: 0;
        padding: 0;
    }

    &.custom-icon li {
        @extend %ls-icon-custom;
    }

    &.default-icon li {
        @extend %ls-icon-default;
    }
}

.ls-bullets {
    &.line-icon li {
        @extend %ls-icon-line;
    }
}

.ls-row {
    --#{$prefix}ls-row-spacing: #{$ls-row-spacing};

    li {
        display: inline-block;
        list-style: outside none none;
        position: relative;
    }

    &.line-icon {
        li:not(:last-of-type) {
            &::after {
                content: "|";
                margin: 0 calc(0.5 * var(--#{$prefix}ls-row-spacing));
            }
        }
    }

    &.no-icon {
        li:not(:last-of-type) {
            margin-right: var(--#{$prefix}ls-row-spacing);
        }
    }

    &.custom-icon,
    &.default-icon {
        li {
            padding-left: 0;
            &::before {
                float: none;
                padding-right: var(--#{$prefix}ws-margin);
                margin-left: 0;
            }
            &:not(:last-of-type) {
                padding-right: var(--#{$prefix}ls-row-spacing);
                &::before {
                    margin-left: 0;
                }
            }
        }
        &.icon-last {
            li {
                display: inline-flex;
                align-items: baseline;
                flex-direction: row;
                &::before {
                    order: 10;
                    padding-right: 0;
                    margin-left: var(--#{$prefix}ws-margin);
                }
            }
        }
    }
}

.ls-navigation {
    &.custom-icon {
        li a {
            @extend %ls-icon-custom;
        }
    }
    &.default-icon {
        li a {
            @extend %ls-icon-default;
        }
    }
    &.line-icon {
        li a {
            @extend %ls-icon-line;
        }
    }

    li.ls-li {
        a:hover {
            .ls-item {
                span:not(.ls-icon) {
                    text-decoration: none;
                }
            }
        }
    }
}

.ls-icon + span {
    // for "icon:" display from linksequence text - see link-icon.tag
    --#{$prefix}ls-row-spacing: #{$ls-row-spacing};
    margin-left: var(--#{$prefix}ws-margin);
}

.ls-expand {
    .heading {
        overflow: visible !important;
        margin-bottom: 0;

        button {
            @include remove-default-button-style;
            position: relative;
            cursor: pointer;
            display: block;
            width: 100%;
            margin-bottom: var(--#{$prefix}headings-margin-bottom);

            &::after {
                @include toggle-arrow-open-after;
                right: 0;
            }

            &.collapsed {
                margin-bottom: 0;
                transition: margin-bottom 0.2s linear 0.2s;
                &::after {
                    @include toggle-arrow-closed-after;
                }
            }
        }
    }

    @include media-breakpoint-up(lg) {
        &.disable-lg {
            .collapse {
                &:not(.show) {
                    display: block;
                }
            }
            .collapsing {
                height: unset !important;
                transition: none;
            }
            button {
                cursor: default;
                &::after {
                    content: none;
                }
                &.collapsed {
                    margin-bottom: var(--#{$prefix}headings-margin-bottom);
                    transition: none;
                    &::after {
                        @include toggle-arrow-closed-after;
                    }
                }
            }
        }
    }
}

// increase line height for touch targets
@if (variable-exists(touch-targets-min-line-height) and ($touch-targets-min-line-height != null) and $touch-targets-min-line-height != 'none') {
    .type-linksequence.ls-bullets ul,
    .type-contact .tablerow {
        line-height: max(#{$touch-targets-min-line-height}, var(--#{$prefix}body-line-height) * var(--#{$prefix}body-font-size));
    }
}
