// This program is part of the OpenCms Mercury Template.
//
// Copyright (c) Alkacon Software GmbH & Co. KG (http://www.alkacon.com)
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

/**********
 * Source file: _privacy-policy.scss
 */

// Privacy banner

.pp-banner {

    .container {
        display: flex;
        flex-direction: column;
        overflow: auto;
        max-height: 100vh;

        > div:not(:last-of-type) {
            margin-bottom: var(--#{$prefix}default-margin-small);
        }
    }

    .banner {
        @include set-box-colors($policy-banner-background, true, true);
        color: var(--#{$prefix}body-color);
        background-color: var(--#{$prefix}body-bg);

        display: none; // will be shown by JavaScript
        box-shadow: 0px -3px 10px 2px $dropshadow;
        opacity: $policy-banner-opacity;
        padding: 20px;
        width: 100vw;

        &.fixed {
            z-index: $above-oc-z-index + 100; // must be above fixed head navigation
            left: 0;
            position: fixed;
            &.top {
                top: 0;
            }
            &.bottom {
                bottom: 0;
            }
        }
    }

    .title {
        font-size: $h2-font-size;
        line-height: $headings-line-height;
        order: 1;
    }

    .message {
        order: 2;
        p:last-of-type {
            margin-bottom: 0;
        }
        a {
            font-weight: $font-weight-bold;
        }
    }

    .selection {
        display: flex;
        align-items: center;
        order: 3;

        .options {
            flex-grow: 1;

            label {
                margin-right: calc(2 * var(--#{$prefix}ws-margin));
                margin-bottom: 0;
                cursor: pointer;
                position: relative;
                display: inline-flex;
                align-items: center;

                input {
                    position: absolute;
                    left: -9999px;
                }

                i {
                    position: relative;
                    top: 0;
                    left: 0;
                    display: block;
                    width: 20px;
                    height: 20px;
                    outline: none;
                    background-color: get-text-color($policy-banner-background);
                    margin-right: 10px;
                }

                input + i::after {
                    @include icon-font();
                    content: "\f00c"; // mercury:icon - fa-check
                    position: absolute;
                    opacity: 0;
                    top: -4px;
                    left: -1px;
                    font-size: 23px;
                    line-height: 23px;
                    font-weight: normal;
                    text-align: center;
                }

                input:checked + i::after {
                    opacity: 1;
                    color: $policy-banner-accept-button-color;
                }

                input[disabled] + i {
                    background-color: $grey-light;
                    &::after {
                        color:  $text-dark;
                    }
                }
            }
        }
    }

    .buttons {
        .btn {
            border: none;
            font-size: 1.8rem;
            min-width: $policy-banner-button-min-width;
            @if ($policy-banner-save-button-color == $policy-banner-background) {
                border-width: 1px;
                border-style: solid;
            }

            &:last-of-type {
                margin-left: calc(2 * var(--#{$prefix}ws-margin));
            }
        }

        .btn-accept {
            @include button-color-setvars($policy-banner-accept-button-color, $policy-banner-accept-hover-color);
            @if ($policy-banner-accept-button-color == $policy-banner-background) {
                border-color: get-text-color($policy-banner-accept-button-color);
            }
        }

        .btn-save {
            @include button-color-setvars($policy-banner-save-button-color, $policy-banner-save-hover-color);
            // &:focus {
            //     background-color: $policy-banner-save-button-color;
            //     color: get-text-color($policy-banner-save-button-color);
            // }
            // &:hover {
            //     background-color: $policy-banner-save-hover-color;
            //     color: get-text-color($policy-banner-save-hover-color);
            // }
            @if ($policy-banner-save-button-color == $policy-banner-background) {
                border-color: get-text-color($policy-banner-save-button-color);
            }
        }
    }

    .btn-close {
        position: absolute;
        right: 15px;
        top: 15px;
        font-size: 2.5rem;
        line-height: 1;
        padding: 5px 8px;
        min-width: auto;
        border: none;
        &:not(:hover):not(:focus) {
            color: var(--#{$prefix}body-color);
            background-color: transparent;
        }
    }

    .links {
        order: 4;
        font-size: 80%;

        ul {
            margin: 0;
            padding: 0;
            list-style-type: none;
        }
        li {
            display: inline;
            margin: 0;
            + li {
                margin-left: calc(2 * var(--#{$prefix}ws-margin));
            }
        }
        a {
            font-weight: $font-weight-bold;
        }
    }

    @include media-breakpoint-down(lg) {
        .title {
            text-align: center;
            font-size: 1.8rem;
            max-width: 100%;
            display: block;
            float: none;
        }

        .container {
            padding: 0;
        }

        .selection {
            font-size: 1.25rem;
            flex-direction: column;
            align-items: flex-start;

            .options {
                flex-grow: initial;
                margin-bottom: var(--#{$prefix}default-margin-small);
            }
        }

        .buttons {
            display: flex;
            flex-wrap: wrap;
            justify-content: flex-end;
            width: 100%;

            .btn {
                margin: 0;
                font-size: 1.5rem;
            }
        }

        .btn-close {
            font-size: 1.5rem;
            right: 10px;
        }

        .message {
            font-size: 1.2rem;
            line-height: 1.25;
            text-align: justify;
            hyphens: auto;
        }

        .links {
            font-size: 1rem;
        }
    }

    @include media-breakpoint-down(md) {

        .banner {
            padding: 15px 15px 10px 15px;
        }

        .selection {
            order: 6;
            margin-bottom: 0 !important;
        }

        .buttons {
            justify-content: space-around;
            .btn {
                margin-bottom: 5px;
            }
        }

        .btn-close {
            right: 5px;
            top: 8px;
            padding: 4px 6px;
        }

        .links {
            margin-bottom: var(--#{$prefix}default-margin-small);
        }
    }

    @include media-breakpoint-down(sm) {

        .selection {
            .options {
                display: flex;
                flex-direction: column;
                label + label {
                    margin-top: var(--#{$prefix}default-margin-small);
                }
            }
        }

        .message {
            margin-bottom: var(--#{$prefix}default-margin-verysmall) !important;
        }

        .buttons {
            .btn {
                font-size: 1.25rem;
                padding: $btn-sm-padding;

                &:last-of-type {
                    margin-left: 0;
                }
            }
        }

        .links {
            li {
                display: list-item;
                +li {
                    margin-left: 0;
                }
            }
        }

    }
}

#privacy-policy-banner-noscript {

    .banner {
        display: block;
        .message {
            font-size: $h1-font-size;
            line-height: $headings-line-height;
        }
    }
}

// Animated toggle button
// see https://proto.io/freebies/onoff/

%toggle-disabled {

    & + .toggle-label {
        pointer-events: none;
        cursor: auto;

        .toggle-inner::before,
        .toggle-inner::after {
            background-color: $togglebox-disabled-color !important;
            color: get-text-color($togglebox-disabled-color) !important;
        }

        .toggle-inner::before,
        .toggle-inner::after {
            background-image: $togglebox-disabled-bg;
        }
    }
}

.type-privacy-policy {
    > div + div {
        margin-top: calc(2 * var(--#{$prefix}paragraph-margin-bottom));
    }
}

.pp-toggle {
    position: relative;
    display: flex;

    .toggle-label {
        display: block;
        cursor: pointer;
        min-height: #{$togglebox-height + 2 * $togglebox-border-size};
        margin-bottom: 0;

        &:hover {
            .toggle-inner {
                &::before,
                &::after {
                    color: var(--#{$prefix}body-color) !important;
                    background-color: var(--#{$prefix}body-bg) !important;
                }
            }
        }
    }

    .toggle-text {
        display: flex;
        align-items: center;
        font-size: 18px;
        line-height: 1;
        margin-left: calc(2 * var(--#{$prefix}ws-margin));
    }

    .toggle-box {
        width: $togglebox-width;
        position: relative;
        display: block;
        overflow: hidden;
        border: $togglebox-border-size solid $togglebox-border-color;
        border-radius: var(--#{$prefix}border-radius);
    }

    .toggle-inner {
        display: block;
        width: 200%;
        margin-left: -100%;

        &::before,
        &::after {
            display: block;
            float: left;
            width: 50%;
            height: $togglebox-height;
            line-height: $togglebox-height;
            padding: 0;
            font-size: 18px;
            font-weight: $font-weight-bold;
            box-sizing: border-box;
        }
        &::before {
            content: attr(data-checked) " ";
            padding-left: 10px;
            background-color: var(--#{$prefix}btn-bg);
            color: var(--#{$prefix}btn-fg);
        }
        &::after{
            content: attr(data-unchecked) " ";
            padding-right: 10px;
            background-color: $togglebox-disabled-color;
            color: get-text-color($togglebox-disabled-color);
            text-align: right;
        }
    }

    .toggle-slider {
        display: block;
        width: #{$togglebox-height - 2 * $togglebox-slider-margin};
        margin: $togglebox-slider-margin;
        background-color: $togglebox-slider-color;
        position: absolute;
        top: 0;
        bottom: 0;
        right: #{$togglebox-width - $togglebox-height - 2 * $togglebox-border-size};
        border: $togglebox-border-size solid $togglebox-border-color;
        border-radius: calc(0.5 * var(--#{$prefix}border-radius));
    }

    &.animated {
        .toggle-inner {
            transition: margin 0.3s ease-in 0s;
        }
        .toggle-slider {
            transition: all 0.3s ease-in 0s;
        }
    }

    .toggle-check {
        opacity: 0;
        position: absolute;
        top: 0;
        left: 0;

        &:checked + .toggle-label {
            .toggle-inner {
                margin-left: 0 !important;
            }
            .toggle-slider {
                right: 0 !important;
            }
        }

        &[disabled] {
            @extend %toggle-disabled;
        }
    }


    @include media-breakpoint-down(md) {
        // this applies to .pp-toggle
        flex-direction: column;

        .toggle-text {
            margin-left: 0;
            margin-bottom: var(--#{$prefix}default-margin-small);
        }

        .toggle-label {
            order: 1;
        }
    }
}

.pp-element {
    padding: var(--#{$prefix}box-padding);
    border-radius: var(--#{$prefix}border-radius);
    color: var(--#{$prefix}highlight-fg-color);
    background-color: var(--#{$prefix}highlight-color);
}

#pp-matomo-jst {
    > div + div {
        margin-top: var(--#{$prefix}default-margin-small);
    }
    .jst-msg {
        @include use-hyphens-text;
        > * {
            &:last-child {
                margin-bottom: 0;
            }
        }
    }
    .jst-btn {
        label.checkbox {
            display: flex;
            align-items: center;
            gap: var(--#{$prefix}default-margin-small);
            font-weight: $font-weight-bold;
            margin-bottom: 0;
            cursor: pointer;

            input {
                position: absolute;
                left: -9999px;
            }

            i {
                border-radius: var(--#{$prefix}btn-border-radius);
                position: relative;
                display: block;
                width: 20px;
                height: 20px;
                outline: none;
                border-width: 1px;
                border-style: solid;
                border-color: $form-radio-unchecked-border-color;
                background-color: $form-input-background;
            }

            span {
                display: block;
                flex-shrink: 10;
            }

            input:checked + i {
                border-color: $form-radio-checked-border-color;

                &::after {
                    @include icon-font();
                    content: '\f00c'; // mercury:icon - fa-check
                    color: $form-radio-checked-color;
                    position: absolute;
                    z-index: 10;
                    top: -5px;
                    left: -1px;
                    font-size: 23px;
                    line-height: 23px;
                    font-weight: normal;
                    text-align: center;
                    overflow: visible;
                }
            }
        }
    }
}

html.opencms-page-editor .pp-toggle {
    .toggle-check {
        @extend %toggle-disabled;
    }
}

html.keyboard-nav {
    .pp-banner .selection {
        input:focus + i {
            @include focus-outline();
        }
    }
    .pp-toggle {
        .toggle-check {
            &:focus + .toggle-label .toggle-box {
                @include focus-outline();
            }
        }
    }
}

#mercury-page .external-cookie-notice {
    // #mercury-page .element selectors added to give rules higher importance
    @include set-box-colors($cookie-notice-bg-color, true, true);
    color: var(--#{$prefix}body-color);
    background-color: var(--#{$prefix}body-bg);

    display: flex;
    flex-direction: column;
    justify-content: center;
    overflow: scroll !important;
    padding: var(--#{$prefix}box-padding);
    scrollbar-width: none;
    cursor: auto;
    // must set this because some elements (e.g. OSM) add another class that changes the font
    font: $font-weight-base #{$cookie-notice-font-size-mobile} / #{$line-height-base} $font-family-base;

    border-radius: var(--#{$prefix}border-radius);
    @include use-hyphens-text;

    @include media-breakpoint-up(lg) {
        font-size: $cookie-notice-font-size-desktop;
    }

    &.cookie-tiny-font {
        justify-content: flex-start;
        font-size: $cookie-notice-tiny-font-size;
        cursor: pointer;

        .cookie-message {
            margin-bottom: 0;
        }
    }

    .cookie-header {
        @include heading-base;
        font-size: $cookie-notice-large-font-size;
    }

    .cookie-header,
    .cookie-message,
    .cookie-switch {
        margin-bottom: var(--#{$prefix}default-margin-small);
    }

    .cookie-footer {
        font-size: $cookie-notice-small-font-size;

        > *:last-child {
            margin-bottom: 0;
        }
    }

    .pp-toggle {
        .toggle-label {
            min-height: #{$cookie-notice-togglebox-height + 2 * $togglebox-border-size};
        }

        .toggle-box {
            width: $cookie-notice-togglebox-width;
        }

        .toggle-slider {
            width: #{$cookie-notice-togglebox-height - 2 * $togglebox-slider-margin};
            right: #{$cookie-notice-togglebox-width - $cookie-notice-togglebox-height - 2 * $togglebox-border-size};
            background-color: $togglebox-border-color;
        }

        .toggle-inner {
            &::before,
            &::after {
                height: $cookie-notice-togglebox-height;
                line-height: $cookie-notice-togglebox-height;
                font-size: $cookie-notice-small-font-size;
            }
        }

        .toggle-text {
            font-size: inherit;
        }
    }
}

// Modal dialog for cookie notice
#mercury-page .modal {

    .modal-dialog.cookie-notice .external-cookie-notice {
        padding: $modal-inner-padding;

        .modal-footer {
            border-top: none;

            .btn + .btn {
                margin-left: calc(2 * var(--#{$prefix}ws-margin));
            }
        }
    }
}
