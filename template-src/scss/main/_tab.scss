// This program is part of the OpenCms Mercury Template.
//
// Copyright (c) Alkacon Software GmbH & Co. KG (http://www.alkacon.com)
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

/**********
 * Source file: _tab.scss
 */

%acco-header {
    position: relative;

    > .hash-link {
        display: none;
    }

    &:hover {
        > .hash-link {
            font-size: var(--#{$prefix}body-font-size);
            font-weight: var(--#{$prefix}body-font-weight);
            line-height: var(--#{$prefix}body-line-height);

            position: absolute;
            right: calc(0.5 * var(--#{$prefix}at-spacing-x));
            top: var(--#{$prefix}at-spacing-y);
            display: flex;
            z-index: $overflow-z-index;
        }
    }
}

%acco-toggle {
    display: block;
    width: 100%;
    position: relative;

    margin: 0;
    padding: var(--#{$prefix}at-spacing-y) var(--#{$prefix}at-spacing-x);

    font-family: $at-header-font-family;
    font-weight: $at-header-font-weight;
    font-size: $at-header-font-size;
    line-height: $at-header-line-height;

    text-transform: $at-text-transform;
    text-decoration: none;
    text-align: inherit;
    @include use-hyphens-headings;

    border: var(--#{$prefix}at-border);
    border-radius: var(--#{$prefix}at-border-radius);

    text-overflow: ellipsis;
    overflow: hidden;
    z-index: $overflow-z-index;

    color: var(--#{$prefix}at-header);
    background-color: var(--#{$prefix}at-header-bg);
}

%acco-toggle-active {
    color: var(--#{$prefix}at-header-active);
    background-color: var(--#{$prefix}at-header-active-bg);
    border-color: var(--#{$prefix}at-header-active-bg);
}

%acco-toggle-hover {
    color: var(--#{$prefix}at-header-hover);
    background-color: var(--#{$prefix}at-header-hover-bg);
    border-color: var(--#{$prefix}at-header-hover-bg);
    text-decoration: none;
}


.variant-tabs,
.accordion {
    --#{$prefix}at-header: #{$at-header};
    --#{$prefix}at-header-bg: #{$at-header-bg};
    --#{$prefix}at-header-active: #{$at-header-active};
    --#{$prefix}at-header-active-bg: #{$at-header-active-bg};
    --#{$prefix}at-header-hover: #{$at-header-hover};
    --#{$prefix}at-header-hover-bg: #{$at-header-hover-bg};

    --#{$prefix}at-spacing-x: #{$at-spacing-x};
    --#{$prefix}at-spacing-y: #{$at-spacing-y};
    --#{$prefix}at-content-padding-x: #{$at-content-padding-x};
    --#{$prefix}at-content-padding-y: #{$at-content-padding-y};
    --#{$prefix}at-margin-between: #{$at-margin-between};

    --#{$prefix}at-border-radius: #{$at-border-radius};
    --#{$prefix}at-border-color: #{$at-border-color};
    --#{$prefix}at-border: #{$at-border};

    --#{$prefix}tab-content-margin-top: #{$tab-content-margin-top};

    --#{$prefix}acco-body-margin-top: #{$acco-body-margin-top};
    --#{$prefix}acco-body-bg: #{$acco-body-bg};
}

// Tabs

.tab-content {
    margin-top: var(--#{$prefix}tab-content-margin-top);

    > .tab-pane {
        display: none;
    }
    > .active {
        display: block;
    }
}

.tab-list {
    list-style: none;
    padding: 0;
    margin: 0;

    @include clearfix;

    &::after {
        clear: both;
    }

    > li {
        @extend %acco-header;
        margin-bottom: var(--#{$prefix}at-margin-between);

        &:last-of-type {
            margin-bottom: 0;
        }

        > .tab-toggle {
            @extend %acco-toggle;

            &.active {
                @extend %acco-toggle-active;
            }

            &:hover {
                @extend %acco-toggle-hover;
            }
        }
    }
}

.acco-body > div > .row-12,
.acco-body > div > .row,
.tab-pane > div > .row-12,
.tab-pane > div > .row {
    // tabs that have a nested container row first:
    // remove bottom margin that was added by the elements on a page from last row in nested tabs
    // using a negative margin
    &:last-child {
         margin-bottom: calc(-1 * var(--#{$prefix}element-margin));
    }
}
.acco-body > div,
.tab-pane > div {
    > .element,
    > .detail-page {
        // tabs that directly contain elements:
        // remove bottom margin from the last element in the tab
        &:last-child {
            margin-bottom: 0;
        }
    }
}

// Accordion panels

.accordion {
    position: relative;
    display: flex;
    flex-direction: column;

    min-width: 0;
    overflow-wrap: anywhere;
    word-break: break-word;

    box-shadow: $acco-panel-shadow;
    margin-bottom: var(--#{$prefix}at-margin-between);

    &:last-of-type {
        margin-bottom: 0;
    }

    .acco-header {
        margin: 0;
        @extend %acco-header;

        .acco-toggle {

            @extend %acco-toggle;

            &[aria-expanded="true"] {
                @extend %acco-toggle-active;

                @if ($acco-border-radius-expand-adjust) {
                    border-bottom-left-radius: 0;
                    border-bottom-right-radius: 0;
                }
            }

            &:hover {
                @extend %acco-toggle-hover;
            }
        }

        @if ($acco-toggle-arrows) {
            &:hover > .hash-link {
                top: 50%;
                transform: translateY(-50%);
                right: calc(3rem + var(--#{$prefix}at-spacing-x));
                // 3rem should be about the size of the toggle button
            }

            .acco-toggle {
                padding-right: calc(3rem + var(--#{$prefix}at-spacing-x));

                &::after {
                    @include toggle-arrow-open-after;
                    right: var(--#{$prefix}at-spacing-x);
                }
                &.collapsed::after {
                    @include toggle-arrow-closed-after;
                }
            }
        }
    }

    .acco-body {
        // border-top: var(--#{$prefix}at-border);
        border: var(--#{$prefix}at-border);
        border-radius: var(--#{$prefix}at-border-radius);

        background-color: var(--#{$prefix}acco-body-bg);
        margin-top: var(--#{$prefix}acco-body-margin-top);
        padding: var(--#{$prefix}at-content-padding-y) var(--#{$prefix}at-content-padding-x);

        overflow: hidden;
        z-index: $overflow-z-index;

        @if ($acco-border-radius-expand-adjust) {
            &.collapsing,
            &.show {
                border-top-left-radius: 0;
                border-top-right-radius: 0;
            }
        }

        // teaser-accordion tag places piece divs directly in the acco-body
        @include piece-bottom-margin;
    }

    .sub-header {
        @extend .h3;
        margin-bottom: var(--#{$prefix}headings-margin-bottom);
    }
}

@include media-breakpoint-up(lg) {
   .tab-list {
        border-bottom: solid 2px var(--#{$prefix}at-header-active-bg);

        > li {
            float: left;
            margin-bottom: 0;

            > .tab-toggle {
                width: auto;

                // not active tabs are colored like regular text
                color: var(--#{$prefix}body-color);
                background-color: transparent;

                border: none;
                border-bottom-left-radius: 0;
                border-bottom-right-radius: 0;
            }
        }
    }
}

// (Image) tile accordions

.variant-tile-accordion {

    .tile-accordion.row {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        margin-bottom: 0;
    }

    .collapse-trigger {
        display: flex;
        position: relative;

        .tile-col {
            container: tile-col / inline-size;
            display: flex;
            flex-direction: column;
            z-index: 1;
        }

        .text-overlay,
        .boxbg-overlay {
            --#{$prefix}square-text-overlay-fg-shadow: none;
            --#{$prefix}square-text-overlay-bg-opacity: 0.75;
            --#{$prefix}square-text-overlay-bg: var(--#{$prefix}body-bg);
            --#{$prefix}square-text-overlay-bg-rgb: var(--#{$prefix}body-bg-rgb);
            --#{$prefix}square-text-overlay-fg: var(--#{$prefix}body-color);
        }

        .text-overlay {
            display: flex;
            align-items: center;
            .piece {
                width: 100%;
            }
            @container tile-col (max-width: 150px) {
                --#{$prefix}square-text-overlay-padding-h: 1rem;
            }
        }

        .piece-heading {
            @include heading-base;
            overflow: visible;
            font-size: $at-tile-header-font-size-static;
            @container tile-col (min-width: 0px) {
                font-size: #{fluid-size-container(22px, 10px, 300px, 100px)};
            }
        }

        .hash-link {
            display: none;
            z-index: #{$overflow-z-index + 20};
            position: absolute;
            top: 15px;
            right: calc(15px + 0.5 * var(--#{$prefix}gutter-x));
        }

        .image-src-box > img {
            border-radius: 0;
        }

        &:hover > .hash-link {
            display: block;
        }
    }

    .collapse-target {
        margin-top: max(var(--#{$prefix}gutter-y), 10px);
        margin-bottom: calc(10 * clamp(0px, calc(10px - var(--#{$prefix}gutter-y)), 1px));

        &.collapsing {
            transition: none;
        }

        & > div {
            > .detail-page:last-child,
            > .element:last-child {
                // tabs that directly contain elements
                margin-bottom: 0;
            }
        }
    }

    &.show-button {
        .collapse-trigger .trigger-item::after {
            @include icon-font();
            content: $toggle-tile-accordion-icon;
            display: flex;
            position: absolute;
            justify-content: center;
            align-items: center;
            line-height: 1;
            color: var(--#{$prefix}body-color);
            background-color: var(--#{$prefix}body-bg);
            font-size: $at-tile-button-font-size;
            width: $at-tile-button-size;
            height: $at-tile-button-size;
            border-top-left-radius: 0;
            border-top-right-radius: 0;
            border-bottom-left-radius: var(--#{$prefix}image-border-radius);
            border-bottom-right-radius: var(--#{$prefix}image-border-radius);
            bottom: -1 * $at-tile-button-size;
            transition: bottom .33s, opacity .33s;
            transform: translateX(-50%);
            left: 50%;
            opacity: 1;
        }
        .collapse-trigger.collapsed .trigger-item::after {
            bottom: 0;
            opacity: 0;
        }
        .collapse-target {
            &::before {
                display: flex;
                content: '';
                height: 0;
                transition: height .33s;
            }
            &.show::before {
                height: calc(#{$at-tile-button-size});
            }
        }
    }

    &.hide-button {
        .collapse-target {
            &.collapsing {
                transition: height .1s;
            }
        }
    }

    &.show-border {
        .collapse-trigger {
            .content-box {
                outline: $at-tile-outline-width solid var(--#{$prefix}body-bg);
                transition: outline-width .2s;
            }
            &.collapsed {
                .content-box {
                    outline-width: 0;
                }
            }
        }
    }

    &.text-below {
        .collapse-trigger {
            .text-overlay {
                --#{$prefix}square-text-overlay-bg-opacity: 1;
                position: relative;
                flex-grow: 1;
            }

            .content-box {
                display: flex;
                flex-direction: column;
                flex-grow: 1;

                .effect-box {
                    .image-src-box,
                    .image-src-box img {
                        border-bottom-left-radius: 0;
                        border-bottom-right-radius: 0;
                    }
                }
            }
        }
    }

    @include media-breakpoint-down(md) {
        span.col-6 {
            &:nth-of-type(n+1) {
                order: 10;
            }
            &:nth-of-type(n+3) {
                order: 30;
            }
            &:nth-of-type(n+5) {
                order: 50;
            }
            &:nth-of-type(n+7) {
                order: 70;
            }
            &:nth-of-type(n+9) {
                order: 90;
            }
            &:nth-of-type(n+11) {
                order: 110;
            }
            &:nth-of-type(n+13) {
                order: 130;
            }
        }
        div.target-6 {
            &:nth-of-type(n+1) {
                order: 20;
            }
            &:nth-of-type(n+3) {
                order: 40;
            }
            &:nth-of-type(n+5) {
                order: 60;
            }
            &:nth-of-type(n+7) {
                order: 80;
            }
            &:nth-of-type(n+9) {
                order: 100;
            }
            &:nth-of-type(n+11) {
                order: 120;
            }
            &:nth-of-type(n+13) {
                order: 140;
            }
        }
    }
    @include media-breakpoint-up(md) {
        span.col-md-3 {
            &:nth-of-type(n+1) {
                order: 10;
            }
            &:nth-of-type(n+5) {
                order: 30;
            }
            &:nth-of-type(n+9) {
                order: 50;
            }
            &:nth-of-type(n+13) {
                order: 70;
            }
        }
        div.target-md-3 {
            &:nth-of-type(n+1) {
                order: 20;
            }
            &:nth-of-type(n+5) {
                order: 40;
            }
            &:nth-of-type(n+9) {
                order: 60;
            }
            &:nth-of-type(n+13) {
                order: 80;
            }
        }

        span.col-lg-2,
        span.col-md-4 {
            &:nth-of-type(n+1) {
                order: 10;
            }
            &:nth-of-type(n+4) {
                order: 30;
            }
            &:nth-of-type(n+7) {
                order: 50;
            }
            &:nth-of-type(n+10) {
                order: 70;
            }
            &:nth-of-type(n+13) {
                order: 90;
            }
        }

        div.target-lg-2,
        div.target-md-4 {
            &:nth-of-type(n+1) {
                order: 20;
            }
            &:nth-of-type(n+4) {
                order: 40;
            }
            &:nth-of-type(n+7) {
                order: 60;
            }
            &:nth-of-type(n+10) {
                order: 80;
            }
            &:nth-of-type(n+13) {
                order: 100;
            }
        }

        span.col-md-6 {
            &:nth-of-type(n+1) {
                order: 10;
            }
            &:nth-of-type(n+3) {
                order: 30;
            }
            &:nth-of-type(n+5) {
                order: 50;
            }
            &:nth-of-type(n+7) {
                order: 70;
            }
            &:nth-of-type(n+9) {
                order: 90;
            }
            &:nth-of-type(n+11) {
                order: 110;
            }
            &:nth-of-type(n+13) {
                order: 130;
            }
        }
        div.target-md-6 {
            &:nth-of-type(n+1) {
                order: 20;
            }
            &:nth-of-type(n+3) {
                order: 40;
            }
            &:nth-of-type(n+5) {
                order: 60;
            }
            &:nth-of-type(n+7) {
                order: 80;
            }
            &:nth-of-type(n+9) {
                order: 100;
            }
            &:nth-of-type(n+11) {
                order: 120;
            }
            &:nth-of-type(n+13) {
                order: 140;
            }
        }
    }
    @include media-breakpoint-up(lg) {
        span.col-lg-2 {
            &:nth-of-type(n+1) {
                order: 10;
            }
            &:nth-of-type(n+7) {
                order: 30;
            }
            &:nth-of-type(n+13) {
                order: 50;
            }
        }
        div.target-lg-2 {
            &:nth-of-type(n+1) {
                order: 20;
            }
            &:nth-of-type(n+7) {
                order: 40;
            }
            &:nth-of-type(n+13) {
                order: 60;
            }
        }
    }
}